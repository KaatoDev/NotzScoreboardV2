plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "2.0.0"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'Kaa'
version = '0.1'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.12-R0.1-SNAPSHOT'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'dev.kaato:NotzAPI:0.4.2'
    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'
    compileOnly 'me.clip:placeholderapi:2.11.5'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    from(sourceSets.main.output)
    configurations = [project.configurations.runtimeClasspath]
    relocate('notzapi', 'notzScoreboardV2.shadow.notzapi') // Prevent classpath conflicts
    relocate('kotlin', 'notzScoreboardV2.shadow.kotlin') // Prevent classpath conflicts
}

tasks.build {
    dependsOn(shadowJar)
}
kotlin {
    jvmToolchain(8)
}